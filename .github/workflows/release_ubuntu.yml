name: release ubuntu

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build (branch, tag or SHA)'
        required: false
        default: 'master'
  push:
    tags:
      - '*'

jobs:
  # tests:
  #   uses: ./.github/workflows/test_ubuntu.yml
  build:
    # needs: [tests]
    name: Build Sourcery for Ubuntu (latest)
    runs-on: ubuntu-22.04
    outputs:
      filename: ${{ steps.build.outputs.filename }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
      # - name: Check Libs
      #   id: check-libs
      #   run: |
      #     echo $LD_LIBRARY_PATH
      # - name: Check GCC Version
      #   id: check-gcc-version
      #   run: |
      #     gcc --version
      # - name: Setup Swift
      #   uses: swift-actions/setup-swift@v2
      #   with:
      #     swift-version: "6.1.0"
      # - name: Install libcurl
      #   id: libcurl
      #   run: |
      #     sudo apt-get install libcurl4-openssl-dev
      # - name: Build it
      #   id: build
      #   run: |
      #     BUILD_DIR="${HOME}/build/"
      #     swift build --disable-sandbox -c release --static-swift-stdlib --build-path $BUILD_DIR
      #     mv "${BUILD_DIR}x86_64-unknown-linux-gnu/release/sourcery" "${BUILD_DIR}/sourcery"
          
      #     UNAME=$(uname -m)
      #     CODENAME=$(lsb_release -c -s)
      #     DESCRIPTION=$(lsb_release -d -s | sed "s/ /-/g" | sed "s/./\L&/g")
      #     SUFFIX=$DESCRIPTION-$CODENAME-$UNAME
      #     TAG=$GITHUB_REF_NAME
      #     FILENAME="sourcery-${TAG}-${SUFFIX}.tar.xz"

      #     pushd $BUILD_DIR
      #     tar -zcvf $FILENAME sourcery
      #     mv $FILENAME "${HOME}/"
      #     popd
          
      #     echo "FILENAME=${FILENAME}" >> $GITHUB_OUTPUT
      # - name: Analyze libs
      #   id: analyze-libs
      #   run: |
      #     readelf -V "~/${{ steps.build.outputs.FILENAME }}" | grep "Name: GLIBC"
      # - name: Analyze libs 2
      #   id: analyze-libs-short
      #   run: |
      #     ldd "~/${{ steps.build.outputs.FILENAME }}"
      # - name: 'Upload Artifact'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ steps.build.outputs.FILENAME }}
      #     path: "~/${{ steps.build.outputs.FILENAME }}"
      #     retention-days: 5
      # - name: 'Upload libtinfo'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: libtinfo.so.6
      #     path: "/usr/lib/x86_64-linux-gnu/libtinfo.so.6"
      #     retention-days: 5
      # - name: 'Upload libstdc++'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: libstdc++.so.6
      #     path: "/usr/lib/x86_64-linux-gnu/libstdc++.so.6"
      #     retention-days: 5
      # - name: 'Upload libm'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: libm.so.6
      #     path: "/usr/lib/x86_64-linux-gnu/libm.so.6"
      #     retention-days: 5
      # - name: 'Upload libcurl'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: libcurl.so.4
      #     path: "/usr/lib/x86_64-linux-gnu/libcurl.so.4"
      #     retention-days: 5
      # - name: 'Upload librtmp'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: librtmp.so.1
      #     path: "/usr/lib/x86_64-linux-gnu/librtmp.so.1"
      #     retention-days: 5
      # - name: 'Upload libldap'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: libldap-2.5.so.0
      #     path: "/usr/lib/x86_64-linux-gnu/libldap-2.5.so.0"
      #     retention-days: 5
      # - name: 'Upload liblber'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: liblber-2.5.so.0
      #     path: "/usr/lib/x86_64-linux-gnu/liblber-2.5.so.0"
      #     retention-days: 5
      - name: 'Tar libs'
        id: tarLibs
        run: |
          cp -R /usr/lib/x86_64-linux-gnu ~/
          tar czf x86_64-linux-gnu.tar.gz x86_64-linux-gnu
      - name: 'Upload all libs'
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-linux-gnu.tar.gz
          path: "~/x86_64-linux-gnu.tar.gz"
          retention-days: 5
      # - name: Install libcurl
      #   id: libcurl
      #   run: |
      #     sudo apt-get install libcurl4-openssl-dev
          
